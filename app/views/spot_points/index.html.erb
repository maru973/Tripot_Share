<article class="pb-4 flex flex-col justify-center">
  <div class="flex items-center">
    <h2 class="grow text-xl md:text-2xl font-bold underline my-1 md:my-2 text-center px-7">登録したスポットの行きたい度合いを選択しよう</h2>
  </div>

  <!-- 地図の表示 -->
  <div id="map" class="border w-full h-[250px] md:h-[400px] mt-1"></div>

  <!-- 登録済みリスト -->

  <%= render 'list', users: @users, user_spots: @user_spots, plan: @plan, spot_points: @spot_points %>

  <!-- 一覧ページボタン --> 
  <div class="flex justify-around mt-3">
    <%= link_to "プラン詳細", plan_path(@plan), class:"text-base-content btn btn-accent md:btn-lg", data: { turbo: false } %>
  </div>
</article>



<script>
  let markers = [];

  const baseUrl = '<%= request.base_url %>';

  // マップの初期化設定
  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 10,
      center:  { lat: <%= @location.latitude %>, lng: <%= @location.longitude %> }, // 地図の中心を指定
      // ストリートビューなど地図右下に表示されていたオプションを削除
      disableDefaultUI: true,
      keyboardShortcuts: false,
      mapId: "<%= ENV['GOOGLE_MAP_ID'] %>"
    });

    // ページリロードしても登録したマーカーが消えない設定
    <% @spots.each do |spot| %>
      (() => {
        let glyphImg = document.createElement("img");

        <% @spot_subscribers[spot.id].each do |user| %>
          let avatarUrl = '<%= user.avatar_url %>'.startsWith('http')
          ? '<%= user.avatar_url %>'
          : new URL('<%= user.avatar_url %>', baseUrl).href;
        <% end %>

        glyphImg.src = avatarUrl;
        glyphImg.className = 'glyph-img';    

        let glyphSvgPinView = new google.maps.marker.PinElement({
          glyph: glyphImg,
          
        });

        const contentString = '<div><%= j render 'spots/modal', spot: spot %></div>';
    
        let infowindow = new google.maps.InfoWindow({
          content: contentString,
          ariaLabel: '<%= spot.name %>',
        });

        let marker = new google.maps.marker.AdvancedMarkerElement({
          map: map,
          position: {lat: <%= spot.latitude %>, lng: <%= spot.longitude %>},
          content: glyphSvgPinView.element,
        });
        marker.id = <%= spot.id %>;
        markers.push(marker);

        marker.addListener("click", () => {
          infowindow.open({
            anchor: marker,
            map,
          });
        });

        // リストのスポット名をクリックするとマップの情報ウィンドウが開く
        let open_infowindow = document.getElementById('infowindow-<%= spot.id %>')
        if (open_infowindow) {
          open_infowindow.addEventListener('click', () => {
            infowindow.open({
              anchor: marker,
              map,
            });
          });
        }

        // ウィンドウ以外の場所をクリックしてウィンドウを閉じる処理
        google.maps.event.addListener(map, 'click', function() {
          infowindow.close();
        });
      })();
    <% end %>
  }

</script>
<!-- google mapのスクリプト -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLEMAPS_API_KEY']%>&callback=initMap&libraries=places,marker&v=weekly" async defer></script>

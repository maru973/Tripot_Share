<article class="pb-4 flex flex-col justify-center">
  <h2 class="grow text-xl md:text-2xl font-bold underline my-1 md:my-2 text-center ps-7"><%= @plan.name %>当日のルート</h2>

  <!-- 地図の表示 -->
  <div id="map" class="border w-full h-[250px] md:h-[400px] mt-1"></div>

  <!-- 登録済みリスト -->
  <%= render 'list', ranking_spots: @ranking_spots, spot_subscribers: @spot_subscribers, plan: @plan, start_location: @start_location, end_location: @end_location %>

  <!-- 削除ボタン -->
  <div class="flex justify-around mt-3">
    <% if current_user.present? && current_user.id === @plan.owner_id %>
      <%= link_to t('.destroy'), plan_path(@plan), class:"text-base-content btn btn-error btn-sm md:btn-lg", data: {turbo_method: :delete, turbo_confirm: "#{@plan.name}を削除しますか" } %>
    <% end %>

    <!-- 一覧ページボタン --> 
    <%= link_to 'プラン詳細', plan_path(@plan), class:"text-base-content btn btn-accent btn-sm md:btn-lg" %>
  </div>
</article>

<script>
  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 10,
      center: { lat: <%= @start_location.latitude %>, lng: <%= @start_location.longitude %> }, // マップ中央をスタート地点に設定
      mapTypeId: "roadmap",
      disableDefaultUI: true,
      keyboardShortcuts: false,
      mapId: "<%= ENV['GOOGLE_MAP_ID'] %>"
    });

    let directionsService = new google.maps.DirectionsService();

    //ルート描写
    let directionsRenderer = new google.maps.DirectionsRenderer();

    //directionsRenderer と地図を紐付け
    directionsRenderer.setMap(map);

    // 経由地の配列を生成（最大6個）
    let wayPoints = new Array();
    let waypoint_string = '<%= raw @ranking_spots.map { |spot| { place_id: spot.place_id } }.to_json %>'
    let waypoint_array = JSON.parse(waypoint_string);

    waypoint_array.forEach(function(waypoint_element) {
      wayPoints.push({location: { placeId: waypoint_element.place_id } });
    });

    console.log(wayPoints);

    // ルートを取得するリクエスト
    let request = {
      origin: { placeId: '<%= @start_location.place_id %>' },      // スタート地点
      destination: { placeId: '<%= @end_location.place_id %>' },   // ゴール地点
      travelMode: google.maps.TravelMode.DRIVING, // 車モード
      optimizeWaypoints: true, // 最適化を有効
      waypoints: wayPoints // 経由地
    };

    directionsService.route(request, function(result, status) {
    if (status === 'OK') {
      directionsRenderer.setDirections(result);
      console.log(result);

      // place_idの配列を抽出
      const placeIds = result.geocoded_waypoints.map(waypoint => waypoint.place_id);

      console.log(placeIds);

      // RailsにPOSTリクエストを送信
      fetch('/courses/<%= @course.id %>/update_order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ place_ids: placeIds })
      })
      .then(response => {
        if (response.ok) {
          console.log("Place IDs sent successfully");
        } else {
          console.error("Failed to send Place IDs");
        }
      });
    } else {
      console.error('Directions request failed due to ' + status);
    }});
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLEMAPS_API_KEY']%>&callback=initMap&libraries=places,marker&v=weekly" async defer></script>

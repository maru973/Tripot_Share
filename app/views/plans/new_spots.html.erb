<article class="pb-4 flex flex-col justify-center">
  <h2 class="text-xl md:text-2xl font-bold underline my-1 md:my-2 text-center"><%= t('.title') %></h2>
  
  <!-- 地図の表示 -->
  <div id="map" class="border w-full h-[250px] md:h-[400px] mt-1"></div>

  <!-- 登録フォーム -->
  <%= render "spots/form", spot: @spot, plan: @plan %>

  <!-- 登録済みリスト -->
  <%= render 'list', users: @users, user_spots: @user_spots, plan: @plan %>

  <!-- リスト保存ボタン　-->
  <div class="flex justify-center mt-3">
    <%= link_to "一時保存", plan_path(@plan), class:"text-base-content btn btn-accent btn-sm md:btn-lg", data: { turbo: false }  %>
  </div>
  
</article>



<script>
  let markers = [];
  
  const baseUrl = '<%= request.base_url %>';

  // マップの初期化設定
  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 10,
      center:  { lat: <%= @location.latitude %>, lng: <%= @location.longitude %> }, // 地図の中心を指定
      // ストリートビューなど地図右下に表示されていたオプションを削除
      disableDefaultUI: true,
      keyboardShortcuts: false,
      mapId: "<%= ENV['GOOGLE_MAP_ID'] %>"
    });

    // ページリロードしても登録したマーカーが消えない設定
    <% @spots.each do |spot| %>
      (() => {
        let glyphImg = document.createElement("img");

        <% @spot_subscribers[spot.id].each do |user| %>
          // CarrierWave URLを絶対URLに変換
          let avatarUrl = '<%= user.avatar_url %>'.startsWith('http')
          ? '<%= user.avatar_url %>'
          : new URL('<%= user.avatar_url %>', baseUrl).href;
        <% end %>

        glyphImg.src = avatarUrl;
        glyphImg.className = 'glyph-img';    

        let glyphSvgPinView = new google.maps.marker.PinElement({
          glyph: glyphImg,
          
        });

        let marker = new google.maps.marker.AdvancedMarkerElement({
          map: map,
          position: {lat: <%= spot.latitude %>, lng: <%= spot.longitude %>},
          content: glyphSvgPinView.element,
        });
        marker.id = <%= spot.id %>;
        markers.push(marker);
      })();
    <% end %>
  }

  function removeMarker(markerId) {
    // マーカー配列の中から指定されたspot.idのマーカーを探して削除する
    markers = markers.filter(marker => {
      if (marker.id == markerId) {
        marker.setMap(null); // マーカーを地図から削除
        return false; // 配列から削除
      }
      return true; // 配列に残す
    });
  }

</script>
<!-- google mapのスクリプト -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLEMAPS_API_KEY']%>&callback=initMap&libraries=places,marker&v=weekly" async defer></script>


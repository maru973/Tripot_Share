<article class="pb-4 flex flex-col justify-center">
  <div class="flex items-center">
    <h2 class="grow text-xl md:text-2xl font-bold underline my-1 md:my-2 text-center ps-7"><%= @plan.name %></h2>

    <% if current_user.member?(@plan.id) %>
     <!-- 追加メニュー -->
      <div class="flex-none dropdown dropdown-end">
        <div tabindex="0" role="button" class="pt-1 md:pr-5">
          <div class="material-symbols-outlined">
            add_box
          </div>
        </div>
        <ul tabindex="0" class="border dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-40 md:w-52">
          <li class="text-xs md:text-lg">
            <%= link_to new_spots_plan_path(@plan) do %>
              <span class= "material-symbols-outlined" style= "font-size: 20px;">
                add_location_alt
              </span>
              スポット追加
            <% end %>
          </li>

          <li class="text-xs md:text-lg">
            <div data-controller="modal">
              <%= render template: 'devise/invitations/new' %>
              <%= link_to new_user_invitation_path(id: @plan.id), data: { action: "click->modal#open", turbo_frame: "modal" } do %>
                <span class= "material-symbols-outlined" style= "font-size: 20px;">
                  person_add
                </span>
                メンバー招待
              <% end %>
            </div>
          </li>
        </ul>
      </div>
    <% end %>
  </div>

  <!-- 地図の表示 -->
  <div id="map" class="border w-full h-[250px] md:h-[400px] mt-1"></div>

  <!-- 登録済みリスト -->
  <%= render 'list', users: @users, user_spots: @user_spots, plan: @plan %>

  <!-- 削除ボタン -->
  <div class="flex justify-around mt-3">
    <% if current_user.id === @plan.owner_id %>
      <%= link_to "削除", @plans_path, class:"text-base-content btn btn-error btn-sm md:btn-lg", data: {turbo_method: :delete, turbo_confirm: "#{@plan.name}を削除しますか" } %>
    <% end %>

    <!-- 一覧ページボタン --> 
    <%= link_to "一覧ページへ戻る", plans_path, class:"text-base-content btn btn-accent btn-sm md:btn-lg" %>
  </div>

  

  <%= render 'plans/invitation_url_button' %>
</article>



<script>
  // 他のファイルでも使用できるようにfunctionの外側で定義
  let map

  let markers = [];

  // マップの初期化設定
  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 10,
      center:  { lat: <%= @location.latitude %>, lng: <%= @location.longitude %> }, // 地図の中心を指定
      // ストリートビューなど地図右下に表示されていたオプションを削除
      disableDefaultUI: true,
      keyboardShortcuts: false,
      mapId: "<%= ENV['GOOGLE_MAP_ID'] %>"
    });

    


    // ページリロードしても登録したマーカーが消えない設定
    <% @spots.each do |spot| %>
      (() => {
        let glyphImg = document.createElement("img");

        glyphImg.src = '<%= asset_path('sample.jpg') %>';
        glyphImg.className = 'glyph-img';    

        let glyphSvgPinView = new google.maps.marker.PinElement({
          glyph: glyphImg,
          
        });

        let marker = new google.maps.marker.AdvancedMarkerElement({
          map: map,
          position: {lat: <%= spot.latitude %>, lng: <%= spot.longitude %>},
          id: <%= spot.id %>,
          content: glyphSvgPinView.element,
        });
      })();
    <% end %>
  }

</script>
<!-- google mapのスクリプト -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLEMAPS_API_KEY']%>&callback=initMap&libraries=places&v=weekly&libraries=marker" defer></script>
<style>

</style>
